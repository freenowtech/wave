{"version":3,"file":"components-experimental-InlineSpinner-docs-InlineSpinner-stories.32850cf3.iframe.bundle.js","mappings":";;;;AAyCA;;;;;AAKA;AAGA;;;;AAIA;AAGA","sources":["webpack://@freenow/wave/./src/components/experimental/InlineSpinner/InlineSpinner.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { compose, variant } from 'styled-system';\nimport SpinnerIcon from '../../../icons/experimental/SpinnerIcon';\nimport { getSemanticValue } from '../../../essentials/experimental';\n\ninterface InlineSpinnerProps {\n    /**\n     * Override the color of the spinner\n     */\n    color?: string;\n    /**\n     * Set the size of the component\n     */\n    size?: 'small' | 'medium' | 'large';\n}\n\nconst sizeVariant = variant({\n    prop: 'size',\n    variants: {\n        small: {\n            width: '1rem',\n            height: '1rem'\n        },\n        medium: {\n            width: '1.25rem',\n            height: '1.25rem'\n        },\n        large: {\n            width: '2.5rem',\n            height: '2.5rem'\n        }\n    }\n});\n\nconst rotation = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nconst Wrapper = styled.span<InlineSpinnerProps>`\n    display: inline-flex;\n    box-sizing: border-box;\n    vertical-align: text-bottom;\n\n    ${compose(sizeVariant)}\n`;\n\nconst Icon = styled(SpinnerIcon)`\n    width: 100%;\n    height: 100%;\n\n    animation: ${rotation} 750ms linear infinite;\n`;\n\nconst InlineSpinner: React.FC<InlineSpinnerProps> = ({\n    color = getSemanticValue('interactive'),\n    size = 'medium',\n    ...rest\n}: InlineSpinnerProps) => (\n    <Wrapper aria-busy=\"true\" size={size}>\n        <Icon color={color} {...rest} />\n    </Wrapper>\n);\n\nexport { InlineSpinner, InlineSpinnerProps };\n"],"names":[],"sourceRoot":""}