{"version":3,"file":"src-essentials-Spaces-docs-Spaces-storybook-mdx.660580c5.iframe.bundle.js","mappings":";AA4CA;AAoBA;AACA;;;;AAIA;;;;;ACvDA;AAGA;;AAEA;AAGA;AACA;AACA;;AAIA","sources":["webpack://@freenow/wave/./src/components/Text/Text.tsx","webpack://@freenow/wave/./src/essentials/Spaces/docs/SpacesContainer.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef } from 'react';\nimport styled from 'styled-components';\nimport {\n    compose,\n    fontFamily,\n    FontFamilyProps,\n    fontSize,\n    FontSizeProps,\n    fontWeight,\n    margin,\n    MarginProps,\n    ResponsiveValue,\n    textAlign,\n    TextAlignProps\n} from 'styled-system';\nimport { theme } from '../../essentials/theme';\nimport { get } from '../../utils/themeGet';\nimport { getSemanticValue } from '../../utils/cssVariables';\n\ninterface TextProps\n    extends ComponentPropsWithoutRef<'span'>,\n        MarginProps,\n        FontSizeProps,\n        FontFamilyProps,\n        TextAlignProps {\n    /**\n     * The font-weight property specifies the weight (or boldness) of the font.\n     * @default normal\n     */\n    fontWeight?: ResponsiveValue<'normal' | 'semibold' | 'bold'>;\n    /**\n     * Enforce primary color\n     */\n    primary?: boolean;\n    /**\n     * Adjust color to indicate secondary information\n     */\n    secondary?: boolean;\n    /**\n     * Adjust color to display a disabled text element\n     */\n    disabled?: boolean;\n}\n\nfunction determineTextColor(props: TextProps) {\n    const { primary, secondary, disabled } = props;\n\n    if (disabled) {\n        return getSemanticValue('foreground-disabled');\n    }\n\n    if (secondary) {\n        return getSemanticValue('foreground-neutral-emphasized');\n    }\n\n    if (primary) {\n        return getSemanticValue('foreground-primary');\n    }\n\n    return 'inherit';\n}\n\nconst Text = styled.span.attrs({ theme })<TextProps>`\n    color: ${determineTextColor};\n    font-size: ${get('fontSizes.2')};\n    font-family: ${get('fonts.normal')};\n    line-height: 1.4;\n    margin: 0;\n\n    ${compose(margin, fontSize, fontWeight, fontFamily, textAlign)}\n`;\n\nexport { Text, TextProps };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Text } from '../../../components';\n\nimport { Spaces } from '../Spaces';\n\ninterface SpaceSquareProps {\n    space: string;\n}\n\nconst SpaceSample = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    padding: 0 ${Spaces[1]};\n`;\n\nconst SpacesWrapper = styled.div`\n    display: flex;\n    margin-top: ${Spaces[6]};\n`;\n\nconst SpaceSquare = styled.div<SpaceSquareProps>`\n    width: ${props => props.space};\n    height: ${props => props.space};\n    background-color: #ca0928;\n`;\n\nconst SpacesContainer: React.FC = () => (\n    <>\n        <SpacesWrapper>\n            {Spaces.map((space, index) => (\n                <SpaceSample key={space}>\n                    <Text fontSize={1} fontWeight=\"semibold\" style={{ color: 'inherit' }}>\n                        {index}\n                    </Text>\n                    <Text mt={1} fontSize={1} style={{ color: 'inherit' }}>\n                        {space}\n                    </Text>\n                    <Text mb={2} fontSize={1} secondary>\n                        {Number(space.replace('rem', '')) * 16}px\n                    </Text>\n                    <SpaceSquare space={Spaces[index]} />\n                </SpaceSample>\n            ))}\n        </SpacesWrapper>\n    </>\n);\n\nexport { SpacesContainer };\n"],"names":[],"sourceRoot":""}