{"version":3,"file":"components-experimental-Search-docs-Search-stories.488b27a6.iframe.bundle.js","mappings":";;;;;;;;;;;AAgBA;AACA;;;;;;;ACLA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;AAIA;AACA;AACA;;;;;;;;;;;;AAcA;;;;;;;;AAQA;AACA;;AAEA;;;AAGA;;;;;;;;;;ACDA;AAGA","sources":["webpack://@freenow/wave/./src/components/experimental/Field/Button.ts","webpack://@freenow/wave/./src/components/experimental/Input/Input.styled.ts","webpack://@freenow/wave/./src/components/experimental/Text/Text.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button as BaseButton } from 'react-aria-components';\nimport { getSemanticValue } from '../../../essentials/experimental/cssVariables';\nimport { get } from '../../../utils/experimental/themeGet';\n\nexport const Button = styled(BaseButton)`\n    appearance: none;\n    background: none;\n    border: none;\n    display: flex;\n    margin: 0;\n    padding: 0;\n    cursor: pointer;\n    outline: 0;\n\n    &[data-focused] {\n        outline: ${getSemanticValue('interactive')} solid 0.125rem;\n        border-radius: ${get('radii.2')};\n    }\n`;\n","import { Input as BaseInput } from 'react-aria-components';\nimport styled from 'styled-components';\n\nimport { getSemanticValue } from '../../../essentials/experimental';\nimport { get } from '../../../utils/experimental/themeGet';\nimport { textStyles } from '../Text/Text';\n\nexport const Wrapper = styled.span`\n    position: relative;\n\n    display: flex;\n    align-items: center;\n    gap: ${get('space.1')};\n    padding: ${get('space.2')} ${get('space.4')};\n\n    background: ${getSemanticValue('surface-variant')};\n    color: ${getSemanticValue('on-surface-variant')};\n    border-radius: ${get('radii.4')};\n\n    cursor: text;\n\n    & > * {\n        flex-shrink: 0;\n    }\n\n    &::after {\n        position: absolute;\n        pointer-events: none;\n        inset: 0;\n        content: '';\n        border-radius: inherit;\n        opacity: 0;\n        transition: opacity ease 200ms;\n    }\n\n    &:hover::after {\n        opacity: 0.16;\n        background: ${getSemanticValue('on-surface')};\n    }\n\n    &:has([data-focused]) {\n        background: ${getSemanticValue('surface')};\n        color: ${getSemanticValue('interactive')};\n        outline: ${getSemanticValue('interactive')} solid 0.125rem;\n        outline-offset: -0.125rem;\n\n        &::after {\n            opacity: 0;\n        }\n    }\n\n    &:has([data-disabled]) {\n        opacity: 0.38;\n        pointer-events: none;\n    }\n`;\n\nexport const Input = styled(BaseInput)`\n    border: 0;\n    outline: 0;\n    padding: 0;\n\n    flex-grow: 1;\n\n    background-color: unset;\n    color: ${getSemanticValue('on-surface')};\n    caret-color: ${getSemanticValue('interactive')};\n\n    ${textStyles.variants.label1}\n\n    &::placeholder {\n        color: ${getSemanticValue('on-surface-variant')};\n    }\n\n    &::-webkit-search-cancel-button {\n        display: none;\n    }\n`;\n","import { Text as BaseText, TextProps as BaseTextProps } from 'react-aria-components';\nimport styled from 'styled-components';\nimport { compose, ResponsiveValue, variant } from 'styled-system';\nimport { theme } from '../../../essentials/experimental';\n\nexport type TextVariant = 'display' | 'headline' | 'title1' | 'title2' | 'body1' | 'body2' | 'label1' | 'label2';\n\ninterface TextProps extends BaseTextProps {\n    variant?: ResponsiveValue<TextVariant>;\n}\n\nexport const textStyles = {\n    variants: {\n        display: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[4],\n            fontWeight: theme.fontWeights.bold,\n            lineHeight: theme.lineHeights[4],\n            fontStretch: '50%'\n        },\n        headline: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[3],\n            fontWeight: theme.fontWeights.bold,\n            lineHeight: theme.lineHeights[3],\n            fontStretch: '50%'\n        },\n        title1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[2],\n            fontWeight: theme.fontWeights.semibold,\n            lineHeight: theme.lineHeights[2]\n        },\n        title2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.medium,\n            lineHeight: theme.lineHeights[1]\n        },\n        body1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[1]\n        },\n        body2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[0],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[0]\n        },\n        label1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.medium,\n            lineHeight: theme.lineHeights[1]\n        },\n        label2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[0],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[0]\n        }\n    }\n};\n\nconst Text = styled(BaseText)<TextProps>`\n    color: inherit;\n    margin: 0;\n\n    ${compose(variant(textStyles))}\n`;\n\nText.defaultProps = {\n    variant: 'body1'\n};\n\nexport { Text, TextProps };\n"],"names":[],"sourceRoot":""}