{"version":3,"file":"components-experimental-ListBox-docs-ListBox-stories.02a3a747.iframe.bundle.js","mappings":";;;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;AAKA;AACA;;;;;;;;;;;;AAcA;;;;ACeA;AAGA","sources":["webpack://@freenow/wave/./src/components/experimental/ListBox/ListBox.tsx","webpack://@freenow/wave/./src/components/experimental/Text/Text.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { ListBox, ListBoxItem as BaseListBoxItem, ListBoxItemProps } from 'react-aria-components';\nimport styled from 'styled-components';\nimport { get } from '../../../utils/experimental/themeGet';\nimport { Text, TextProps } from '../Text/Text';\nimport { getSemanticValue } from '../../../essentials/experimental';\n\nconst StyledListBoxItem = styled(BaseListBoxItem)`\n    position: relative;\n    display: block;\n    padding: ${get('space.3')} ${get('space.4')};\n    border-radius: ${get('radii.4')};\n    color: ${getSemanticValue('on-surface')};\n\n    cursor: pointer;\n\n    &::before {\n        position: absolute;\n        top: 0;\n        right: 0;\n        left: 0;\n        bottom: 0;\n        content: '';\n        border-radius: inherit;\n        opacity: 0;\n        transition: opacity ease 200ms;\n    }\n\n    &[data-focused] {\n        outline: 0;\n    }\n\n    &[data-focus-visible] {\n        outline: ${getSemanticValue('interactive')} solid 0.125rem;\n        outline-offset: -0.125rem;\n    }\n\n    &[data-selected] {\n        color: ${getSemanticValue('on-interactive-container')};\n        background: ${getSemanticValue('interactive-container')};\n    }\n\n    &[data-hovered]::before {\n        opacity: 0.08;\n        background-color: currentColor;\n    }\n\n    &[data-disabled] {\n        opacity: 0.38;\n        cursor: default;\n    }\n`;\n\nfunction LabelText(props: TextProps): ReactElement {\n    return <Text slot=\"label\" variant=\"title2\" as=\"div\" {...props} />;\n}\n\nfunction DescriptionText(props: TextProps): ReactElement {\n    return <Text slot=\"description\" variant=\"body2\" as=\"div\" {...props} />;\n}\n\nfunction ListBoxItem(props: ListBoxItemProps): ReactElement {\n    if (typeof props.children === 'string') {\n        return (\n            <StyledListBoxItem textValue={props.children} {...props}>\n                <LabelText>{props.children}</LabelText>\n            </StyledListBoxItem>\n        );\n    }\n\n    return <StyledListBoxItem {...props}>{props.children}</StyledListBoxItem>;\n}\n\nexport { ListBox, ListBoxItem, LabelText, DescriptionText };\n","import { Text as BaseText, TextProps as BaseTextProps } from 'react-aria-components';\nimport styled from 'styled-components';\nimport { compose, ResponsiveValue, variant } from 'styled-system';\nimport { theme } from '../../../essentials/experimental';\n\ninterface TextProps extends BaseTextProps {\n    variant?: ResponsiveValue<'display' | 'headline' | 'title1' | 'title2' | 'body1' | 'body2' | 'label1' | 'label2'>;\n}\n\nexport const textStyles = {\n    variants: {\n        display: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[4],\n            fontWeight: theme.fontWeights.bold,\n            lineHeight: theme.lineHeights[4],\n            fontStretch: '50%'\n        },\n        headline: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[3],\n            fontWeight: theme.fontWeights.bold,\n            lineHeight: theme.lineHeights[3],\n            fontStretch: '50%'\n        },\n        title1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[2],\n            fontWeight: theme.fontWeights.semibold,\n            lineHeight: theme.lineHeights[2]\n        },\n        title2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.medium,\n            lineHeight: theme.lineHeights[1]\n        },\n        body1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[1]\n        },\n        body2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[0],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[0]\n        },\n        label1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.medium,\n            lineHeight: theme.lineHeights[1]\n        },\n        label2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[0],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[0]\n        }\n    }\n};\n\nconst Text = styled(BaseText)<TextProps>`\n    color: inherit;\n    margin: 0;\n\n    ${compose(variant(textStyles))}\n`;\n\nText.defaultProps = {\n    variant: 'body1'\n};\n\nexport { Text, TextProps };\n"],"names":[],"sourceRoot":""}