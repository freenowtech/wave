{"version":3,"file":"components-TabBar-docs-TabBar-stories.bf830b7c.iframe.bundle.js","mappings":";;;AAgCA;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AAOA;AACA;;AAEA;AACA;;;AAKA;;;AC9CA;AACA","sources":["webpack://@freenow/wave/./src/components/TabBar/Link.tsx","webpack://@freenow/wave/./src/components/TabBar/TabBar.tsx"],"sourcesContent":["import React, { ComponentPropsWithoutRef } from 'react';\nimport styled from 'styled-components';\nimport { Spaces } from '../../essentials';\nimport { theme } from '../../essentials/theme';\nimport { get } from '../../utils/themeGet';\nimport { getSemanticValue } from '../../utils/cssVariables';\n\ninterface LinkProps extends ComponentPropsWithoutRef<'a'> {\n    /**\n     * Indicates that the link is currently selected\n     * @default false\n     */\n    selected?: boolean;\n\n    /**\n     * Override the default active class name (see react-router)\n     */\n    activeClassName?: string;\n\n    /**\n     * Replace the rendered component with an HTML tag or another component\n     * @default 'a'\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    as?: keyof JSX.IntrinsicElements | React.ComponentType<any>;\n}\n\nconst DEFAULT_ACTIVE_CLASS_NAME = 'active';\n\nconst UnderLine = styled.div`\n    background-color: transparent;\n    height: 0.1875rem;\n    margin-top: ${Spaces[1]};\n`;\n\nconst InnerLink = styled.a.attrs({ theme })<LinkProps>`\n    color: ${getSemanticValue('foreground-neutral-emphasized')};\n    cursor: pointer;\n    font-size: ${get('fontSizes.1')};\n    font-weight: ${get('fontWeights.semibold')};\n    font-family: ${get('fonts.normal')};\n    margin-right: ${Spaces[3]};\n    text-decoration: none;\n\n    &:last-child {\n        margin-right: 0;\n    }\n\n    &.${props => (props.activeClassName ? props.activeClassName : DEFAULT_ACTIVE_CLASS_NAME)} {\n        color: ${getSemanticValue('foreground-accent-default')};\n\n        ${UnderLine} {\n            background-color: ${getSemanticValue('foreground-accent-default')};\n        }\n    }\n`;\n\nconst Link: React.FC<LinkProps> = ({ children, selected, ...rest }: LinkProps) => {\n    const combinedClassNames = [rest.className];\n\n    if (selected) {\n        combinedClassNames.push(rest.activeClassName ? rest.activeClassName : DEFAULT_ACTIVE_CLASS_NAME);\n    }\n\n    return (\n        <InnerLink {...rest} className={combinedClassNames.join(' ')}>\n            {children}\n            <UnderLine />\n        </InnerLink>\n    );\n};\n\nexport { Link, LinkProps };\n","import styled from 'styled-components';\nimport { margin } from 'styled-system';\n\nimport { theme } from '../../essentials/theme';\nimport { Link } from './Link';\nimport { TabBarWithLink } from './TabBarWithLink';\n\nconst TabBar: TabBarWithLink = Object.assign(\n    styled.nav.attrs({ theme })`\n        display: flex;\n\n        ${margin}\n    `,\n    { Link }\n);\n\nexport { TabBar, TabBarWithLink };\n"],"names":[],"sourceRoot":""}