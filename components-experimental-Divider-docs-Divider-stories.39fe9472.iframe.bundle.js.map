{"version":3,"file":"components-experimental-Divider-docs-Divider-stories.39fe9472.iframe.bundle.js","mappings":";AAkDA;AACA;AAGA;;AAEA;AACA;AAGA;;;;ACQA;AAGA","sources":["webpack://@freenow/wave/./src/components/experimental/Divider/Divider.tsx","webpack://@freenow/wave/./src/components/experimental/Text/Text.tsx"],"sourcesContent":["import React from 'react';\nimport { compose, LayoutProps, space, SpaceProps, variant } from 'styled-system';\nimport styled from 'styled-components';\nimport { getSemanticValue } from '../../../essentials/experimental';\n\ntype DividerProps = SpaceProps &\n    LayoutProps & {\n        /**\n         * Set the direction of the divider to vertical\n         */\n        vertical?: boolean;\n        /**\n         * Set the variant of the divider\n         */\n        variant?: 'full-width' | 'inset' | 'middle-inset';\n    };\n\nconst horizontalVariants = variant({\n    prop: 'variant',\n    variants: {\n        'full-width': {\n            minWidth: '100%'\n        },\n        inset: {\n            marginLeft: '0.5rem'\n        },\n        'middle-inset': {\n            marginLeft: '0.5rem',\n            marginRight: '0.5rem'\n        }\n    }\n});\n\nconst verticalVariants = variant({\n    prop: 'variant',\n    variants: {\n        'full-width': {\n            minHeight: '100%'\n        },\n        inset: {\n            marginTop: '0.5rem'\n        },\n        'middle-inset': {\n            marginTop: '0.5rem',\n            marginBottom: '0.5rem'\n        }\n    }\n});\n\nconst HorizontalLine = styled.div<DividerProps>`\n    border-top: 1px solid ${getSemanticValue('divider')};\n    ${compose(space, horizontalVariants)}\n`;\n\nconst VerticalLine = styled.div<DividerProps>`\n    align-self: stretch;\n    border-left: 1px solid ${getSemanticValue('divider')};\n    ${compose(space, verticalVariants)}\n`;\n\nexport const Divider: React.FC<DividerProps> = ({\n    vertical = false,\n    variant: variantVal = 'full-width',\n    ...props\n}: DividerProps) =>\n    vertical ? (\n        <VerticalLine data-testid=\"vertical-divider-experimental\" variant={variantVal} {...props} />\n    ) : (\n        <HorizontalLine data-testid=\"horizontal-divider-experimental\" variant={variantVal} {...props} />\n    );\n","import { Text as BaseText, TextProps as BaseTextProps } from 'react-aria-components';\nimport styled from 'styled-components';\nimport { compose, ResponsiveValue, variant } from 'styled-system';\nimport { theme } from '../../../essentials/experimental';\n\ninterface TextProps extends BaseTextProps {\n    variant?: ResponsiveValue<'display' | 'headline' | 'title1' | 'title2' | 'body1' | 'body2' | 'label1' | 'label2'>;\n}\n\nexport const textStyles = {\n    variants: {\n        display: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[4],\n            fontWeight: theme.fontWeights.bold,\n            lineHeight: theme.lineHeights[4],\n            fontStretch: '50%'\n        },\n        headline: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[3],\n            fontWeight: theme.fontWeights.bold,\n            lineHeight: theme.lineHeights[3],\n            fontStretch: '50%'\n        },\n        title1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[2],\n            fontWeight: theme.fontWeights.semibold,\n            lineHeight: theme.lineHeights[2]\n        },\n        title2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.medium,\n            lineHeight: theme.lineHeights[1]\n        },\n        body1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[1]\n        },\n        body2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[0],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[0]\n        },\n        label1: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[1],\n            fontWeight: theme.fontWeights.medium,\n            lineHeight: theme.lineHeights[1]\n        },\n        label2: {\n            fontFamily: 'inherit',\n            fontSize: theme.fontSizes[0],\n            fontWeight: theme.fontWeights.normal,\n            lineHeight: theme.lineHeights[0]\n        }\n    }\n};\n\nconst Text = styled(BaseText)<TextProps>`\n    color: inherit;\n    margin: 0;\n\n    ${compose(variant(textStyles))}\n`;\n\nText.defaultProps = {\n    variant: 'body1'\n};\n\nexport { Text, TextProps };\n"],"names":[],"sourceRoot":""}